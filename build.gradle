/*
 * This build file is the build file of the Spigot plugin 'MineAPI' by w67clement
 */
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'maven-publish'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}

apply plugin: 'com.jfrog.bintray'

group = 'com.w67clement.mineapi'
version = '2.2.0-dev4'
archivesBaseName = 'MineAPI'
def authors = '[w67clement]'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'

// In this section you declare where to find the dependencies of your project
repositories {
    repositories {
        maven {
            url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
        }
    }
    repositories {
        maven {
            url "http://repo.glowstone.net/content/repositories/snapshots/"
        }
    }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    ivy {
        url "http://www.tcpr.ca/files/"
        layout 'pattern', {
            artifact '[module]/[module]-[revision].[ext]'
        }
    }
    mavenCentral();
    jcenter();
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId project.group
            artifactId 'mineapi'
            version project.version

            artifact sourcesJar
        }
    }
}

// You can't publish to bintray :o
bintray {
    user = 'w67clement'
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['MyPublication']
    pkg {
        repo = 'maven'
        name = 'MineAPI'
        userOrg = user
        licenses = ['GPL-3.0']
        vcsUrl = 'https://github.com/w67clement/MineAPI.git'
        publicDownloadNumbers = true
        version {
            name = project.version
            desc = project.version.toString().contains('DevBuild') ? 'MineAPI development build v' + project.version : 'MineAPI v' + project.version
            attributes = ['gradle-plugin': project.group + ':mineapi:' + project.version]
        }
    }
}

configurations {
    provided
    compile.extendsFrom provided
}

dependencies {
    provided 'org.bukkit:bukkit:1.8.8-R0.1-SNAPSHOT'
    provided 'org.spigotmc.1.8.8:spigot:1.8.8-R0.1-SNAPSHOT-latest:1.8.8'
    provided 'org.spigotmc.1.8.3:spigot:1.8.3-R0.1-SNAPSHOT-latest:1.8.3'
    provided 'org.spigotmc.1.8:spigot:1.8-R0.1-SNAPSHOT-latest:1.8'
    provided 'net.glowstone:glowstone:0.0.1-SNAPSHOT'
    provided 'net.md-5:bungeecord-api:1.8-SNAPSHOT'
    compile 'com.google.code.gson:gson:2.5'
    compile 'org.ow2.asm:asm:5.0.4'
    provided 'io.netty:netty-all:4.0.33.Final'
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "plugin.yml"
        include "bungee.yml"

        expand 'version': project.version.toString().replace("#", ""), 'authors': authors.toString()
    }
}

jar {
    dependsOn configurations.runtime
    from {
        (configurations.runtime - configurations.provided).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}